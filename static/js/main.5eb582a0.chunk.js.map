{"version":3,"sources":["components/navbar.js","components/image-header.js","components/welcome-msg.js","components/citycard.js","components/cityList.js","components/search-city.js","config/api.js","pages/Home.js","components/categoryList.js","components/searchKeyword.js","components/searchCriteria.js","components/RatingLabel.js","components/restaurantList.js","pages/City.js","components/RestaurantDetail.js","components/ReviewsDetail.js","pages/Restaurant.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","ImageHeader","alt","src","WelcomeMessage","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","SearchCity","keyword","onSubmit","type","placeholder","value","onChange","API","baseUri","api_key","process","Home","changeKeywordHandler","e","preventDefault","setState","target","searchSubmitHandler","url","searchValue","state","console","log","axios","get","headers","params","q","then","data","status","searchResultTitle","searchResultCity","location_suggestions","catch","err","getFeaturedCities","city_ids","featuredCities","this","Component","CategoryList","categories","categoryActive","onClick","choosedCategory","SearchKeyword","keywordSubmitHandler","keywordChangeHandler","SearchCriteria","criteria","a","index","criteriaName","aria-hidden","style","color","deleteCriteriaHandler","onClickSearch","RatingLabel","backgroundColor","rating_color","borderColor","aggregate_rating","rating_text","RestaurantList","listRestaurant","i","thumb","location","locality","address","user_rating","cuisines","currency","average_cost_for_two","phone_numbers","City","getCity","newCriteria","push","getCategories","c","getRestaurant","city_id","entity_id","entity_type","collections","restaurants","restaurant","category","filter","splice","searchRestaurantHandler","cri","r","renderRestaurantList","match","RestaurantDetail","timings","ReviewDetail","reviews","reviews_count","user_reviews","review","rating","review_text","user","review_time_friendly","Restaurant","getRestoDetail","resto_id","getReviewsDetail","res_id","list","content1","content2","content3","Footer","href","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.5eb582a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = ()=>(\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\" >Yuk Cari Makan</Link>\r\n    \r\n    </nav>\r\n)\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst ImageHeader = ()=>(\r\n        <>\r\n        <div className=\"col\">\r\n          <img alt=\"header\" className=\"img-fluid w-100\" src=\"https://cdn.pixabay.com/photo/2016/11/22/18/52/cake-1850011_960_720.jpg\" />\r\n        </div>\r\n        </>\r\n    \r\n)\r\n\r\nexport default ImageHeader;","import React from 'react';\r\n\r\nconst WelcomeMessage = ()=>(\r\n\r\n    \r\n        <div className=\"col mx-auto my-2 text-center\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header bg-dark\">\r\n              <h2 className=\"text-light\">Selamat datang !</h2>\r\n            </div>\r\n            <div className=\"card-body bg-dark\">\r\n              <h3 className=\"card-text text-light card-title\">Yuk! Cari makan</h3>\r\n              <h5 className=\"text-light\">Disini kamu bisa mencari makanan populer dan favorit dari berbagai kota</h5>\r\n              <h5 className=\"text-light\"> Kamu juga bisa memberikan dan melihat rating atau review dari tiap restaurant nya loh</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n    \r\n)\r\n\r\nexport default WelcomeMessage;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction CityCard (props){\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"col-md-4 mx-auto my-3\">\r\n                <div className=\"card bg-dark text-light\">\r\n                  <div className=\"card-body\">\r\n                    <h2 className=\"card-title\">\r\n                      {props.city.name}\r\n                    </h2>\r\n                    <p className=\"card-text\">\r\n                      {props.city.country_name}\r\n                    </p>\r\n                    <Link className=\"btn btn-light text-decoration-none text-dark\" to={`/city/${props.city.id}`} >\r\n                      Lihat restaurant di kota {props.city.name}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityCard;","import React from 'react';\r\nimport CityCard from './citycard'\r\n\r\nconst CityList = (props)=>(\r\n    <>\r\n    <div className=\"col-md-10 mx-auto my-2 text-center\">\r\n        <h3>{props.title}</h3>\r\n    </div>\r\n    <div className=\"col-md-12\">\r\n        <div className=\"row\">\r\n            { (props.cities === null)?\r\n                null:\r\n                (_renderCityList(props.cities))\r\n                 }\r\n            \r\n        </div>\r\n    </div>\r\n    </>\r\n\r\n)\r\n\r\nconst _renderCityList = (cities)=>\r\n{\r\n    if(cities.length > 0 ){\r\n        return (cities.map(city=> <CityCard key={city.id} city={city} /> ));\r\n    }else{\r\n        return (\r\n            <div className=\"col text-center\">\r\n               <p className=\"text-danger\">Data tidak ditemukan</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CityList;","import React from 'react'\r\n\r\nconst SearchCity = (props)=> (\r\n    <div className=\"col-md-10 mx-auto my-4 text-center bg-light p-3\">\r\n          <h3>Cari Kota : <small>{ props.keyword } </small> </h3>\r\n            <form onSubmit={props.onSubmit} >\r\n              <div className=\"input-group\">\r\n                <input \r\n                  className=\"form-control\" \r\n                  type=\"text\"\r\n                  placeholder=\"Cari tempat favorit mu disini..\" \r\n                  value={props.keyword}\r\n                  onChange={props.onChange} />\r\n                <div className=\"input-group-append\">\r\n                  <button type=\"submit\" className=\"btn btn-dark\">\r\n                    Cari\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n    </div>\r\n)\r\n\r\nexport default SearchCity;","export const API = {\r\n    zomato: {\r\n        baseUri: 'https://developers.zomato.com/api/v2.1',\r\n        api_key: process.env.REACT_APP_ZOMATO_API_KEY\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport ImageHeader from '../components/image-header';\r\nimport WelcomeMessage from '../components/welcome-msg';\r\nimport CityList from '../components/cityList';\r\nimport SearchCity from '../components/search-city'\r\nimport axios from 'axios'\r\nimport {API} from '../config/api'\r\n\r\nclass Home extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          keyword: '',\r\n          featuredCities: null,\r\n          searchResultCity: null,\r\n          searchResultTitle: null,\r\n        }\r\n      }\r\n    \r\n      changeKeywordHandler = (e)=>{\r\n        e.preventDefault();\r\n        this.setState({keyword: e.target.value })\r\n      }\r\n\r\n      searchSubmitHandler = (e)=>{\r\n          e.preventDefault();\r\n          var url = `${API.zomato.baseUri}/cities`;\r\n          let searchValue = this.state.keyword;\r\n          console.log('Mencari kota',searchValue);\r\n          console.log('api key:',API.zomato.api_key)\r\n          axios.get(url,{\r\n            headers: {\r\n              'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n              q: searchValue\r\n            }\r\n          }).then(({data})=>{\r\n              if(data.status === 'success'){\r\n                if(data.length <= 0){\r\n                  this.setState({searchResultTitle: 'Kota tidak ditemukan'})\r\n                } \r\n                this.setState({\r\n                  searchResultCity: data.location_suggestions,\r\n                  keyword: '',\r\n                  searchResultTitle: `Hasil pencarian kota ${searchValue}`\r\n                })\r\n                \r\n              }\r\n          }).catch(err=> console.log(err));\r\n      }\r\n      getFeaturedCities = ()=> {\r\n        var url = `${API.zomato.baseUri}/cities`;\r\n        axios.get(url,{\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            city_ids: '74,11052,170'\r\n          }\r\n        }).then(({data})=> {\r\n          if(data.status === 'success'){\r\n            this.setState({\r\n              featuredCities: data.location_suggestions\r\n            })\r\n          }\r\n        }).catch(err=> console.log(err));\r\n      }\r\n      componentDidMount(){\r\n        //this.getFeaturedCities();\r\n      }\r\n    render(){\r\n        \r\n        return (\r\n            <>\r\n                <ImageHeader />\r\n                <WelcomeMessage />\r\n        \r\n                <div className=\"container\">\r\n                <div className=\"row my-3\">\r\n                    <CityList\r\n                    title='Kota rekomendasi' \r\n                    cities={this.state.featuredCities}  \r\n                    />\r\n                    <SearchCity \r\n                    onSubmit={this.searchSubmitHandler}\r\n                    keyword={this.state.keyword}\r\n                    onChange={this.changeKeywordHandler}\r\n                    />\r\n                    <CityList\r\n                    title={this.state.searchResultTitle}\r\n                    cities={this.state.searchResultCity} \r\n                    />\r\n                </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nconst CategoryList = props => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            { props.categories ? (props.categories.map(e=>(\r\n                <button key={e.id} className={\r\n                    'list-group-item list-group-item-action ' + (props.categoryActive && e.id === props.categoryActive.id ? 'active' : '')\r\n                } onClick={()=>props.choosedCategory(e)} >{ e.name }</button>\r\n            ))):(\r\n                <p><i className=\"fas fa-spinner\"></i> Loading..</p>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CategoryList;","import React from 'react'\r\n\r\nconst SearchKeyword = (props)=> {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <form onSubmit={props.keywordSubmitHandler} >\r\n                    <div className=\"input-group\">\r\n                        <input className=\"form-control\" name=\"searchBarCity\" type=\"text\"\r\n                            placeholder=\"Masukan nama restaurant\"\r\n                            value={props.keyword}\r\n                            onChange={props.keywordChangeHandler}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <input type=\"submit\" className=\"btn btn-dark\" value=\"Cari\" />\r\n                            </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            { (props.keyword && (\r\n                    <div className=\"card-footer\">\r\n                        <small>Mencari : { props.keyword } </small>\r\n                    </div>\r\n                )) }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchKeyword;","import React from 'react'\r\n\r\nconst SearchCriteria = (props)=>(\r\n    \r\n        <div className=\"card bg-light text-dark\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\" >Kriteria</h5>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {props.criteria.map((a,index)=>(\r\n                            <tr key={index} className=\"table-active\">\r\n                                <td>{a.criteriaName}</td>\r\n                                <td>{a.data.name}</td>\r\n                                <td>\r\n                                    {a.criteriaName !== 'city' && (\r\n                                        <i className=\"fas fa-times\"\r\n                                        aria-hidden=\"true\" style={{color:'red'}}\r\n                                        onClick={()=>props.deleteCriteriaHandler(index)}\r\n                                        ></i> \r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"float-right\">\r\n                    <button onClick={props.onClickSearch} className=\"btn btn-dark\">Cari</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n)\r\n\r\nexport default SearchCriteria;","import React from 'react'\r\n\r\nconst RatingLabel = (props)=> (\r\n    <div className=\"btn btn-sm disabled\"\r\n        style={{\r\n            color:'white',\r\n            backgroundColor:`#${props.rating_color}`,\r\n            borderColor: `#${props.rating_color}`\r\n        }}\r\n    >\r\n        {`${props.aggregate_rating} (${props.rating_text})`}\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport RatingLabel from './RatingLabel'\r\n\r\nconst RestaurantList = (props)=>(\r\n    <div className=\"row\">\r\n        { props.listRestaurant ? (props.listRestaurant.map((i,index)=>(\r\n            <div className=\"col-md-6 my-2\" key={index}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <img className=\"img-thumbnail\" src={ i.thumb } alt={i.name} />\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <h5 className=\"card-title\">{ i.name }</h5>\r\n                                <h6>{ i.location.locality }</h6>\r\n                                <p className=\"card-text\" > {i.location.address} </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   <div className=\"card-body\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Rating</td>\r\n                                    <td>\r\n                                    <RatingLabel \r\n                                        rating_color= {i.user_rating.rating_color}\r\n                                        aggregate_rating = {i.user_rating.aggregate_rating}\r\n                                        rating_text={i.user_rating.rating_text}\r\n                                    />\r\n                                        \r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cuisines</td>\r\n                                    <td>{i.cuisines}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        Harga untuk berdua\r\n                                    </td>\r\n                                    <td>\r\n                                        {i.currency + ' '+ i.average_cost_for_two}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Phone</td>\r\n                                    <td>{i.phone_numbers}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <Link to={`/restaurant/${i.id}`} className=\"text-decoration-none\" >\r\n                                <button className=\"btn btn-outline-dark btn-block\">Lihat Selengkapnya</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        )):(\r\n            <p className=\"text-muted\"><i className=\"fab fa-circle\"></i> Loading..</p>\r\n        )}\r\n    </div>\r\n\r\n)\r\n\r\nexport default RestaurantList;","import React,{Component} from 'react'\r\nimport axios from 'axios';\r\nimport {API} from '../config/api';\r\nimport CategoryList from '../components/categoryList'\r\nimport SearchKeyword from '../components/searchKeyword';\r\nimport SearchCriteria from '../components/searchCriteria'\r\nimport RestaurantList from '../components/restaurantList';\r\n\r\nclass City extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            listRestaurant:[],\r\n            categoryActive: null,\r\n            keyword: null,\r\n            criteria: [],\r\n            restaurants: []\r\n        }\r\n    }\r\n    getCity = (city_ids)=>{\r\n        let url = `${API.zomato.baseUri}/cities`;\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: `${city_ids}`\r\n            }\r\n        }).then(({data})=>{\r\n            if(data.status === 'success'){\r\n                let city = data.location_suggestions[0]\r\n                let newCriteria = {\r\n                    criteriaName : 'city',\r\n                    data: city\r\n                }\r\n                let criteria = [...this.state.criteria]\r\n                criteria.push(newCriteria)\r\n                this.setState({\r\n                   city: city,\r\n                   criteria: criteria\r\n                })\r\n            }\r\n        }).catch(err=>console.log(err))\r\n        \r\n    }\r\n\r\n    getCategories = ()=>{\r\n        let url = `${API.zomato.baseUri}/categories`\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            }\r\n        }).then(({data})=>{\r\n            let categories = data.categories.map(c=>{\r\n                return c.categories\r\n            })\r\n            this.setState({\r\n                categories: categories\r\n            })\r\n        }).catch(err=> console.log(err))\r\n    }\r\n    \r\n    getRestaurant = (city_id)=>{\r\n        let url = `${API.zomato.baseUri}/search`\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                entity_id: `${city_id}`,\r\n                entity_type: 'city'\r\n            }\r\n        }).then(({data})=>{\r\n            let collections = data.restaurants.map(a=>{\r\n                return a.restaurant\r\n            })\r\n            this.setState({\r\n                listRestaurant: collections\r\n            })\r\n        }).catch(err=> console.log(err))\r\n    }\r\n    choosedCategory = (category)=>{\r\n        console.log('category terpilih',category)\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(a=>a.criteriaName !== 'category')\r\n        let newCriteria = {\r\n            criteriaName: 'category',\r\n            data: category\r\n        }\r\n        criteria.push(newCriteria)\r\n        \r\n        this.setState({\r\n            categoryActive: category,\r\n            criteria: criteria\r\n        })\r\n       \r\n    }\r\n    keywordChangeHandler = (e)=>{\r\n        this.setState({\r\n            keyword: e.target.value\r\n        })\r\n    }\r\n\r\n    deleteCriteriaHandler = (index)=>{\r\n        let criteria = [...this.state.criteria]\r\n        criteria.splice(index,1)\r\n        console.log('deleting criteria',index)\r\n        this.setState({\r\n            criteria: criteria\r\n        })\r\n    }\r\n\r\n    keywordSubmitHandler = (e)=>{\r\n        e.preventDefault()\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(a=>a.criteriaName !== 'keyword')\r\n        let newCriteria = {\r\n            criteriaName: 'keyword',\r\n            data: {\r\n                name: this.state.keyword\r\n            }\r\n        }\r\n        criteria.push(newCriteria)\r\n        this.setState({\r\n            keyword: '',\r\n            criteria: criteria})\r\n    }\r\n\r\n    searchRestaurantHandler = ()=>{\r\n        this.setState({listRestaurant: null})\r\n        let url =`${API.zomato.baseUri}/search`\r\n        let params = {}\r\n\r\n        for(let cri of this.state.criteria){\r\n            \r\n            switch(cri.criteriaName){\r\n                case 'city':\r\n                    params.entity_id = cri.data.id;\r\n                    params.entity_type = 'city';\r\n                    break;\r\n                case 'category':\r\n                    params.category = cri.data.id;\r\n                    break;\r\n                case 'keyword':\r\n                    params.q = cri.data.name;\r\n                    break;\r\n            }\r\n        }\r\n        console.log('Mencari kritera :',params)\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params\r\n        }).then(({data})=>{\r\n            let restaurant = data.restaurants.map(r=>{\r\n                return r.restaurant\r\n            })\r\n            this.setState({listRestaurant: restaurant })\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {city_id} = this.props.match.params;\r\n        console.log('mengambil data kota',city_id)\r\n        this.getCity(city_id);\r\n        this.getCategories()\r\n        this.getRestaurant(city_id)\r\n        console.log('mengambil restoran di kota',city_id)\r\n    }\r\n    renderRestaurantList = ()=>{\r\n        if(this.state.listRestaurant === null){\r\n            return (\r\n                <p className=\"text-muted text-center\">\r\n                    <i className=\"fas fa-spinner\"></i>\r\n                     Loading..\r\n                </p>\r\n            )\r\n        }\r\n        if(this.state.listRestaurant.length > 0){\r\n            return (\r\n                <RestaurantList listRestaurant={this.state.listRestaurant} />\r\n            )\r\n        } else {\r\n            return (\r\n                <h5 className=\"text-muted text-center\">\r\n                    Data restaurant tidak ditemukan\r\n                </h5>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <>\r\n            <div className=\"container my-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 my-1\">\r\n                        <h3>Kategori</h3>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                    <h3 className=\"float-right\">Daftar restaurant di kota\r\n                        {this.state.city && (\r\n                          <strong> {this.state.city.name} </strong>\r\n                        )\r\n                        }\r\n                    </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <CategoryList \r\n                            categories = {this.state.categories}\r\n                            categoryActive = {this.state.categoryActive}\r\n                            choosedCategory = {(category)=>this.choosedCategory(category)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <SearchKeyword \r\n                                    keyword = {this.state.keyword}\r\n                                    keywordChangeHandler= {this.keywordChangeHandler}\r\n                                    keywordSubmitHandler={this.keywordSubmitHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-12 my-3\">\r\n                                <SearchCriteria \r\n                                    criteria={this.state.criteria}\r\n                                    deleteCriteriaHandler={(index)=>this.deleteCriteriaHandler(index)}\r\n                                    onClickSearch={this.searchRestaurantHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                {this.renderRestaurantList()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default City;","import React from 'react'\r\nimport RatingLabel from '../components/RatingLabel'\r\n\r\nconst RestaurantDetail = (props)=>(\r\n    <>\r\n    {props.restaurant ? (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card-header\">\r\n                <h5 className=\"card-title\" style={{color:'#076473'}}>\r\n                    {props.restaurant.name + ' Restaurant'}\r\n                </h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <img alt=\"thumbnail\" src={props.restaurant.thumb}\r\n                            className=\"img-thumbnail\"  />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <h5 className=\"card-text\">\r\n                            {props.restaurant.location.locality}\r\n                        </h5>\r\n                        <p className=\"card-text\">{props.restaurant.location.address}</p>\r\n                        <p className=\"card-text\">\r\n                            {props.restaurant.timings}\r\n                        </p>\r\n                        <p className=\"card-text\">\r\n                            Cuisine : {props.restaurant.cuisines}\r\n                        </p>\r\n                        <RatingLabel \r\n                            rating_color= {props.restaurant.user_rating.rating_color}\r\n                            aggregate_rating = {props.restaurant.user_rating.aggregate_rating}\r\n                            rating_text={props.restaurant.user_rating.rating_text}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ): (\r\n        <h5 className=\"card-title\">Data tidak ditemukan</h5>\r\n    )}\r\n    </>\r\n)\r\n\r\nexport default RestaurantDetail;","import React from 'react'\r\n\r\nconst ReviewDetail = (props)=>(\r\n    <>\r\n        {props.reviews ? (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h5 className=\"card-title\">Review {props.reviews.reviews_count }</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {props.reviews.user_reviews.map(r=>(\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\" style={{backgroundColor:`#${r.review.rating_color}`}}>\r\n                                <h5 className=\"card-title text-light\" >\r\n                                    <i className=\"fas fa-star\"></i>\r\n                                    {'  ' + r.review.rating + ' ' + `(${r.review.rating_text})`}\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-text\">\r\n                                    { r.review.review_text }\r\n                                </h6>\r\n                                <p className=\"text-muted\">{r.review.user.name + ' ' + r.review.review_time_friendly}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            ): (\r\n                <h5 className=\"card-title\">Data tidak ditemukan</h5>\r\n        )}\r\n    </>\r\n)\r\n\r\nexport default ReviewDetail;","import React , { Component } from 'react'\r\nimport {API} from '../config/api'\r\nimport axios from 'axios'\r\nimport RestaurantDetail from '../components/RestaurantDetail'\r\nimport ReviewDetail from '../components/ReviewsDetail'\r\n\r\nclass Restaurant extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        }\r\n    }\r\n\r\n    getRestoDetail = (resto_id)=>{\r\n        let url = `${API.zomato.baseUri}/restaurant`;\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                'res_id': `${resto_id}`\r\n            }\r\n        }).then(({data})=>{\r\n            \r\n            this.setState({\r\n                restaurant: data\r\n            })\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    getReviewsDetail = (res_id)=>{\r\n        let url = `${API.zomato.baseUri}/reviews`\r\n        axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                'res_id': `${res_id}`\r\n            }\r\n        }).then(({data})=>{\r\n            this.setState({\r\n                reviews: data\r\n            })\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {params} = this.props.match;\r\n        console.log(params.res_id)\r\n        this.getRestoDetail(params.res_id)\r\n        this.getReviewsDetail(params.res_id)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <>\r\n            <div className=\"container my-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <RestaurantDetail \r\n                                    restaurant={this.state.restaurant}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row my-5\">\r\n                    <div className=\"col\">\r\n                        <ReviewDetail \r\n                            reviews={this.state.reviews}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Restaurant;","import React from 'react'\r\nimport './footer.css';\r\n\r\nvar list = [{\r\n    title:'Yuk cari makan',\r\n    content1:'Tentang Kami',\r\n    content2:'Kontak Kami',\r\n    content3: null\r\n},{\r\n    title: 'Support',\r\n    content1:'FAQ',\r\n    content2:'Help Desk',\r\n    content3:'Forum'\r\n},{\r\n    title: 'Download App',\r\n    content1: 'Google Play',\r\n    content2: 'Appstore',\r\n    content3: null\r\n}];\r\nconst Footer = ()=> (\r\n    <footer className=\"container-fluid my-3\">\r\n        <div className=\"row bg-dark pt-3\">\r\n          { list.map(e=>(\r\n              <div className=\"col-sm-4 text-center\">\r\n              <h5 className=\"text-light\">{ e.title }</h5>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item bg-dark\">\r\n                    \r\n                        { (e.content1 === 'Google Play')?\r\n                            <a href=\"!#\">\r\n                            <i className=\"fab fa-google-play\"></i> Google Play</a> :\r\n                             <a href=\"!#\">{e.content1}</a> } \r\n                    \r\n                </li>\r\n                <li className=\"list-group-item bg-dark\">\r\n                { (e.content2 === 'Appstore')?\r\n                            <a href=\"!#\">\r\n                            <i className=\"fab fa-app-store\"></i> Appstore</a> :\r\n                             <a href=\"!#\">{e.content2}</a> }\r\n                </li>\r\n                { (e.content3 !== null)?\r\n                    <li className=\"list-group-item bg-dark\">\r\n                        <a href=\"!#\">{ e.content3 }</a>\r\n                    </li>\r\n                : null }\r\n              </ul>\r\n          </div>\r\n\r\n          ))}\r\n        </div>\r\n        <div className=\"row copyright\">\r\n            <div className=\"col text-center\">\r\n                <h5>Cari kami di sosial media:</h5>\r\n                <a href=\"!#\"><i className=\"fab fa-twitter\"></i> </a>\r\n                <a href=\"!#\"><i className=\"fab fa-facebook\"></i> </a>\r\n                <a href=\"!#\"><i className=\"fab fa-instagram\"></i> </a>\r\n                <h5 className=\"copyright-item\" >Yuk!Carimakan <small><em>Copyright</em> @ 2020</small> </h5>\r\n            </div>\r\n            \r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import React,{Component} from 'react';\nimport Navbar from './components/navbar';\nimport Home from './pages/Home';\nimport City from './pages/City';\nimport Restaurant from './pages/Restaurant';\nimport Footer from './components/footer/footer'\nimport {BrowserRouter as Router , Route} from 'react-router-dom'\n\nclass App extends Component {\n  \n  render(){\n   \n\n  return (\n    <Router>\n      <Navbar />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/city/:city_id\" component={City} />\n      <Route path=\"/restaurant/:res_id\" component={Restaurant} />\n      <Footer />\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nrequire('dotenv').config();\n"],"sourceRoot":""}